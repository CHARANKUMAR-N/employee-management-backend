# Application
spring.application.name=employee-management-backend

# Server
server.port=8080
server.address=0.0.0.0
#server.address=10.100.124.64

# Database (Render PostgreSQL)
spring.datasource.url=jdbc:postgresql://dpg-d0ml2kbuibrs73epu66g-a.oregon-postgres.render.com:5432/employee_db_5pjg
spring.datasource.username=employee_db_5pjg_user
spring.datasource.password=MAoRzDL6616oyTq8ScR5pjQIceJpMLhX
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect



# JPA/Hibernate
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Auth0 Configuration
spring.security.oauth2.client.provider.auth0.issuer-uri=https://dev-mlvc4obj0xoj262o.us.auth0.com/
spring.security.oauth2.client.registration.auth0.client-id=msFAoItlh3wmSPTOfpTDkhFcwVuniIND
spring.security.oauth2.client.registration.auth0.client-secret=4M61x9m8UUJn-B9hHvjlKkPR4taR2_lZ6EtULm6BnL3MykKJtbe0q8FKqh_L8R3N
spring.security.oauth2.client.registration.auth0.scope=openid,profile,email
spring.security.oauth2.client.registration.auth0.redirect-uri=http://10.100.124.64:8080/login/oauth2/code/auth0
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-mlvc4obj0xoj262o.us.auth0.com/

# File upload properties
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Hibernate properties
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Set the maximum allowed packet size for PostgreSQL
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
# Hibernate properties to prevent identifier issues
spring.jpa.properties.hibernate.event.merge.entity_copy_observer=allow
spring.jpa.properties.hibernate.id.new_generator_mappings=true

# CORS Configuration
cors.allowed-origins=http://10.100.124.64:8081,http://localhost:8081,https://employee-management-frontend-tr0k.onrender.com
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.exposed-headers=Authorization,Content-Type
cors.allow-credentials=true

# Logging
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.com.example.employeemanagement=DEBUG

# Error handling
server.error.include-message=always
server.error.include-binding-errors=always

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


